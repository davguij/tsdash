/**
 * Creates an object with the same keys as the `source` object and values generated by running each own enumerable property of `source` thru the `fn` function.
 *
 * @param source Object to map the values from.
 * @param fn Function to apply to each value.
 */

export function mapValues<T, K extends keyof T>(
  source: T,
  fn: (value: T[K], key: K) => T[K]
) {
  const entries = Object.entries(source).map<[K, T[K]]>(([key, value]) => [
    key as K,
    fn(value, key as K),
  ]);
  return Object.fromEntries(entries);
}
